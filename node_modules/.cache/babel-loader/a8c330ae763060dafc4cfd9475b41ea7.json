{"ast":null,"code":"var _jsxFileName = \"/Users/kristenmoran/Desktop/hackathon-master/my-app/src/views/SearchPage.tsx\";\nimport React from 'react';\nimport '../App.css';\nimport SearchBar from '../components/SearchBar/SearchBar';\nimport { StyledButton } from '../components/Button/Button';\n\nconst checkScrollForm = () => {\n  document.getElementById('Form') && document.getElementById('Form').scrollIntoView({\n    behavior: 'smooth',\n    block: 'start'\n  });\n};\n\nconst SearchPage = props => {\n  const onClickTeach = async e => {\n    await props.setShowForm();\n    checkScrollForm();\n  };\n\n  const handleSearch = e => {\n    const search = e.target.value;\n    props.setSearch(search);\n  }; // TODO: Actually filter results\n\n\n  const filterResults = () => {\n    return ['Annie Barnett-Young', 'Kathryn Hackman', 'Kristen Moran'];\n  };\n\n  const onKeyPress = async e => {\n    if (e.key === 'Enter') {\n      if (props.searchText !== '') {\n        props.setUserList(filterResults());\n      }\n    }\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(SearchBar, {\n    text: props.searchText,\n    placeholder: 'teach me how to...',\n    handleSearch: handleSearch,\n    onKeyPress: onKeyPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(StyledButton, {\n    onClick: onClickTeach,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"I want to teach\"));\n};\n\nexport default SearchPage;","map":{"version":3,"sources":["/Users/kristenmoran/Desktop/hackathon-master/my-app/src/views/SearchPage.tsx"],"names":["React","SearchBar","StyledButton","checkScrollForm","document","getElementById","scrollIntoView","behavior","block","SearchPage","props","onClickTeach","e","setShowForm","handleSearch","search","target","value","setSearch","filterResults","onKeyPress","key","searchText","setUserList"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,SAASC,YAAT,QAA6B,6BAA7B;;AASA,MAAMC,eAAe,GAAG,MAAM;AAC5BC,EAAAA,QAAQ,CAACC,cAAT,CAAwB,MAAxB,KACED,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAiCC,cAAjC,CAAgD;AAAEC,IAAAA,QAAQ,EAAE,QAAZ;AAAsBC,IAAAA,KAAK,EAAE;AAA7B,GAAhD,CADF;AAED,CAHD;;AAKA,MAAMC,UAAsC,GAAIC,KAAD,IAAW;AAExD,QAAMC,YAAY,GAAG,MAAOC,CAAP,IAA4C;AAC/D,UAAMF,KAAK,CAACG,WAAN,EAAN;AACAV,IAAAA,eAAe;AAChB,GAHD;;AAKA,QAAMW,YAAY,GAAIF,CAAD,IAA4C;AAC/D,UAAMG,MAAM,GAAGH,CAAC,CAACI,MAAF,CAASC,KAAxB;AACAP,IAAAA,KAAK,CAACQ,SAAN,CAAgBH,MAAhB;AACD,GAHD,CAPwD,CAYxD;;;AACA,QAAMI,aAAa,GAAG,MAAM;AAC1B,WAAO,CAAC,qBAAD,EAAwB,iBAAxB,EAA2C,eAA3C,CAAP;AACD,GAFD;;AAIA,QAAMC,UAAU,GAAG,MAAOR,CAAP,IAAoD;AACrE,QAAIA,CAAC,CAACS,GAAF,KAAU,OAAd,EAAuB;AACrB,UAAIX,KAAK,CAACY,UAAN,KAAqB,EAAzB,EAA6B;AAC3BZ,QAAAA,KAAK,CAACa,WAAN,CAAkBJ,aAAa,EAA/B;AACD;AACF;AACF,GAND;;AASA,SAAQ,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgB,oBAAC,SAAD;AACtB,IAAA,IAAI,EAAET,KAAK,CAACY,UADU;AAEtB,IAAA,WAAW,EAAE,oBAFS;AAGtB,IAAA,YAAY,EAAER,YAHQ;AAItB,IAAA,UAAU,EAAEM,UAJU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhB,EAKR,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAET,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBALQ,CAAR;AAOD,CAjCD;;AAmCA,eAAeF,UAAf","sourcesContent":["import React from 'react';\nimport '../App.css';\nimport SearchBar from '../components/SearchBar/SearchBar';\nimport { StyledButton } from '../components/Button/Button';\n\ninterface ISearchPageProps {\n  setShowForm: () => void,\n  setSearch: (search: string) => void,\n  searchText: string,\n  setUserList: (users: string[]) => void,\n}\n\nconst checkScrollForm = () => {\n  document.getElementById('Form') &&\n    document.getElementById('Form')!.scrollIntoView({ behavior: 'smooth', block: 'start' });\n}\n\nconst SearchPage: React.FC<ISearchPageProps> = (props) => {\n\n  const onClickTeach = async (e: React.MouseEvent<HTMLElement>) => {\n    await props.setShowForm();\n    checkScrollForm();\n  }\n\n  const handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const search = e.target.value;\n    props.setSearch(search);\n  };\n  \n  // TODO: Actually filter results\n  const filterResults = () => {\n    return ['Annie Barnett-Young', 'Kathryn Hackman', 'Kristen Moran'];\n  }\n\n  const onKeyPress = async (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      if (props.searchText !== '') {\n        props.setUserList(filterResults());\n      }\n    }\n  }\n\n\n  return (<React.Fragment><SearchBar\n    text={props.searchText}\n    placeholder={'teach me how to...'}\n    handleSearch={handleSearch}\n    onKeyPress={onKeyPress} />\n  <StyledButton onClick={onClickTeach} >I want to teach</StyledButton>\n  </React.Fragment>);\n}\n\nexport default SearchPage;"]},"metadata":{},"sourceType":"module"}