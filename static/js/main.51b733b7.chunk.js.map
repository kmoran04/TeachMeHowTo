{"version":3,"sources":["icon_slack_hash_colored.png","Cogo-Connect-Icon.png","logo.svg","components/SearchBar/styles.ts","components/SearchBar/SearchBar.tsx","components/Button/Button.tsx","views/Form/styles.ts","views/styles.ts","views/Form/FormInputField.tsx","views/Form/Form.js","components/SearchResult/styles.ts","components/SearchResult/SearchResult.tsx","components/SearchResultList/styles.ts","components/SearchResultList/SearchResultList.tsx","views/Results.tsx","views/SearchPage.tsx","views/Home.tsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","SearchBarStyled","styled","div","attrs","className","_templateObject","SearchInput","input","_templateObject2","SearchBar","props","react_default","a","createElement","type","placeholder","value","text","onChange","handleSearch","onKeyPress","StyledButton","button","Button_templateObject","FormInput","styles_templateObject","FormInputWrapper","styles_templateObject2","FormTitle","h1","_templateObject3","AddSkill","_templateObject4","Logo","views_styles_templateObject","NoResults","views_styles_templateObject2","PageWrapper","styles_templateObject3","Reset","Redo","styles_templateObject4","FormInputField","name","placeholderText","placeholderTextArray","skillsArray","addSkill","push","onClickSubmit","alert","SubmissionForm","formik_esm","initialValues","skill","onSubmit","_ref","values","errors","touched","handleChange","handleSubmit","isSubmitting","map","index","FormInputField_FormInputField","onClick","Name","span","SearchResult_styles_templateObject","ResultWrapper","SearchResult_styles_templateObject2","Slack","SearchResult_styles_templateObject3","SearchResult","string","src","slack","alt","height","ResultListWrapper","SearchResultList_styles_templateObject","Title","SearchResultList_styles_templateObject2","Term","SearchResultList_styles_templateObject3","TitleWrapper","SearchResultList_styles_templateObject4","SearchResultList","Fragment","term","list","result","components_SearchResult_SearchResult","Results","length","components_SearchResultList_SearchResultList","SearchPage","onClickTeach","Object","asyncToGenerator","regenerator_default","mark","_callee","e","wrap","_context","prev","next","setShowForm","document","getElementById","scrollIntoView","behavior","block","stop","_x","apply","this","arguments","_ref2","_callee2","_context2","key","searchText","setUserList","_x2","components_SearchBar_SearchBar","search","target","setSearch","Home","_useState","useState","_useState2","slicedToArray","setSearchText","_useState3","_useState4","userList","_useState5","_useState6","showForm","onSearchSubmission","users","checkScroll","id","views_SearchPage","href","logo","views_Results","Form","App","views_Home","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.51b733b7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon_slack_hash_colored.6767d9e0.png\";","module.exports = __webpack_public_path__ + \"static/media/Cogo-Connect-Icon.a33f8036.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import styled from 'styled-components';\n\nconst SearchBarStyled = styled.div.attrs({\n  className: 'SearchBar',\n})`\n  display: flex;\n  align-items: center;\n  margin-top: 6rem;\n  margin-bottom: -2rem;\n`;\n\n\nconst SearchInput = styled.input.attrs({\n  className: 'SearchInput',\n})`\n  background-color: white;\n  border-radius: 2.5rem;\n  border: none;\n  padding: 0.25rem 2.25rem;\n  font-size: 2rem;\n  color: dark-grey;\n  height: 4rem;\n  width: 40rem;\n  box-shadow: 10px 10px rgb(40,43,40, .25);\n  margin-bottom: 100px;\n\n  ::placeholder {\n    color: grey;\n  }\n  &:focus {\n    outline: none !important;\n  }\n`;\n\nexport {\n  SearchBarStyled, SearchInput,\n};\n","import React, { ChangeEvent } from 'react';\n\nimport { SearchBarStyled, SearchInput } from './styles';\n\ninterface ISearchBarProps {\n  text: string;\n  placeholder: string;\n  handleSearch: (e: ChangeEvent<HTMLInputElement>) => void;\n  onKeyPress: (e: React.KeyboardEvent<HTMLInputElement>) => void;\n}\n\nconst SearchBar: React.FC<ISearchBarProps> = (props) => {\n\n  return (\n    <SearchBarStyled>\n      <SearchInput\n        type='text'\n        placeholder={props.placeholder}\n        value={props.text}\n        onChange={props.handleSearch}\n        onKeyPress={props.onKeyPress}\n      />\n    </SearchBarStyled>\n  );\n};\n\nexport default SearchBar;\n","import styled from \"styled-components\";\n\nexport const StyledButton = styled.button`\n  width: 10rem;\n  height: 3rem;\n  font-size: 1rem;\n  border-radius: 1rem;\n  background: #B9D9E4; \n  color: white;\n  border-width: 0px;\n  margin-top: 20px;\n  margin-bottom: 100px;\n  text-transform: lowercase;\n\n  &:hover {\n    background: #19647E;\n    cursor: pointer;\n  }\n  &:active,\n  &:focus {\n    outline: none !important;\n  }\n`;","import styled from 'styled-components';\nimport { StyledButton } from '../../components/Button/Button';\n\nexport const FormInput = styled.input`\n    border-radius: 3px;\n    padding: 0px 30px;\n    border: 0px;\n    width: 300px;\n    height: 35px;\n    font-weight: bold;\n    ::placeholder {\n        font-weight: normal;\n        font-style: italic;\n    }\n    :focus {\n        outline: none !important;\n    }\n`;\n\nexport const FormInputWrapper = styled.div`\n    margin-bottom: 15px;\n`\n\nexport const FormTitle = styled.h1`\n    padding-top: 100px;\n    font-size: 40px;\n`;\n\nexport const AddSkill = styled(StyledButton)`\n   display: block;\n   margin: auto;\n   background: none;\n\n   &:hover {\n       background: none;\n       color: #19647E;\n   }\n`;","import styled from 'styled-components';\nimport { Redo } from 'styled-icons/evil/Redo';\n\n\nexport const Logo = styled.a`\n  position: fixed;\n  right: 50px;\n  bottom: 15px;\n  opacity: .8;\n\n  :hover {\n    cursor: pointer;\n    opacity: 1;\n  }\n`;\n\nexport const NoResults = styled.div`\n  color: white;\n  font-size: 40px;\n  padding-top: 20%;\n  min-height: 100vh;\n`;\n\nexport const PageWrapper = styled.div`\n  min-height: 100vh;\n`;\n\nexport const Reset = styled(Redo)`\n  height: 50px;\n  color: white;\n  position: fixed;\n  left: 50px;\n  bottom: 30px;\n\n  :hover {\n    cursor: pointer;\n    color: #19647E;\n  }\n`","import React from 'react';\nimport { FormInput, FormInputWrapper } from './styles';\n\ninterface IFormInputFieldProps {\n  placeholderText: string,\n  value: string,\n}\n\nexport const FormInputField: React.FC<IFormInputFieldProps> = (props) => {\n\n return <FormInputWrapper> <FormInput\n    type=\"Skill\"\n    name=\"Skill\"\n    value={props.value}\n    placeholder={props.placeholderText}\n  />\n  </FormInputWrapper>\n};\n\nexport default FormInputField;","import React from 'react';\nimport { Formik } from 'formik';\nimport { StyledButton } from '../../components/Button/Button';\nimport { FormTitle, AddSkill } from './styles';\nimport { PageWrapper } from '../styles';\nimport { FormInputField } from './FormInputField';\n\nconst placeholderTextArray = ['play guitar?', 'create a mobile app?', 'play poker?', 'tie knots?', 'fold origami?', 'bake?'];\nlet skillsArray = ['', '', '', '', ''];\n\n\nconst createInputs = () => {\n  return skillsArray.map((skill, index) => {\n    const placeholderText = placeholderTextArray[index];\n    const value = skill;\n    return <FormInputField placeholderText={placeholderText} value={value} />;\n  });\n};\n\nconst addSkill = () => {\n  skillsArray.push('');\n}\nconst onClickSubmit = () => {\n    alert('Thanks for submitting!');\n}\n\nconst SubmissionForm = () => (\n  <PageWrapper>\n    <FormTitle>i want to teach how to...</FormTitle>\n    <Formik\n      initialValues={{ skill: '' }}\n\n      //TODO: create onSubmit function\n      onSubmit={() => {\n        \n      }}\n\n      \n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n      }) => (\n          <form onSubmit={handleSubmit} >\n            {createInputs()}\n            <AddSkill onClick={addSkill}>+ Add Skill</AddSkill>\n            <StyledButton type=\"submit\" onClick={onClickSubmit}> Submit </StyledButton>\n          </form>\n        )}\n    </Formik>\n  </PageWrapper>);\n\nexport default SubmissionForm;\n","import styled from 'styled-components';\n\nexport const Name = styled.span`\n  font-size: 30px;\n`;\n\nexport const ResultWrapper = styled.div`\n  padding: 20px;\n  background-color: white;\n  width: 35%;\n  margin: 0 auto;\n  margin-bottom: 20px;\n  border-radius: 10px;\n  color: grey;\n  display: flex;\n  justify-content: center;\n\n  :hover {\n    background-color: #3f0f3f;\n    color: white;\n    cursor: pointer;\n  }\n`;\n\nexport const Slack = styled.span`\n  margin-left: 20px;\n  \n`","import React from 'react';\nimport { Name, ResultWrapper, Slack } from './styles';\nimport slack from '../../icon_slack_hash_colored.png';\n\n\n interface ISearchResultProps {\n  name: string;\n}\n\nconst SearchResult: React.FC<ISearchResultProps> = (props) => {\n\n  //TODO: link to slack\n  //https://api.slack.com/methods/users.identity\n  //create slack DM\n  const createLink = () => {\n    //slack://user?team={TEAM_ID}&id={USER_ID}\n  };\n\n  const onClick = () => {\n    const string = 'Opening Slack to message ' + props.name;\n    alert(string);\n  }\n\n  \n  return (<ResultWrapper onClick={onClick}>\n    <Name>{props.name}</Name>\n    <Slack> <img src={slack} alt=\"slack\" height=\"30px\" /> </Slack>\n    </ResultWrapper>\n  );\n};\n\nexport default SearchResult;\n","import styled from 'styled-components';\n\nexport const ResultListWrapper = styled.div`\n  font-size: 20px;\n  padding-bottom: 100px;\n  align: center;\n`;\n\nexport const Title = styled.p`\n  color: white;\n  font-size: 40px;\n`\nexport const Term = styled(Title)`\n  color: grey;\n`\n\nexport const TitleWrapper = styled.div`\n  padding-top: 20px;\n  text-align: center;\n`","import React from 'react';\nimport SearchResult from '../SearchResult/SearchResult';\nimport { ResultListWrapper, Title, Term, TitleWrapper } from './styles';\n\ninterface SearchResultListProps {\n  term: string;\n  list: string[];\n}\nconst SearchResultList: React.FC<SearchResultListProps> = (props) => {\n\n  const renderResults = () => {\n    return props.list.map((result: string) => {\n      return <SearchResult name={result} />;\n    });\n  }\n\n  return (<React.Fragment>\n    <TitleWrapper>\n      <Title>coworkers who can teach you how to:</Title>\n      <Term>{props.term}</Term>\n    </TitleWrapper>\n    <ResultListWrapper>\n      {renderResults()}\n    </ResultListWrapper>\n  </React.Fragment>\n  );\n};\n\nexport default SearchResultList;\n","import React from 'react';\nimport '../App.css';\nimport SearchResultList from '../components/SearchResultList/SearchResultList';\nimport { NoResults, PageWrapper } from './styles';\n\ninterface ResultsProps {\n  list: string[];\n  term: string;\n}\n\nconst Results: React.FC<ResultsProps> = (props) => {\n\n  if (props.list[0] === '')\n    return null;\n\n  return <PageWrapper>\n    {(props.list.length === 0) ?\n      <NoResults>no one knows how to {props.term} yet. be the first!</NoResults> :\n      <SearchResultList term={props.term} list={props.list} />}\n  </PageWrapper>;\n}\n\nexport default Results;\n","import React from 'react';\nimport '../App.css';\nimport SearchBar from '../components/SearchBar/SearchBar';\nimport { StyledButton } from '../components/Button/Button';\n\ninterface ISearchPageProps {\n  setShowForm: () => void,\n  setSearch: (search: string) => void,\n  searchText: string,\n  setUserList: (users: string[]) => void,\n}\n\nconst checkScrollForm = () => {\n  document.getElementById('Form') &&\n    document.getElementById('Form')!.scrollIntoView({ behavior: 'smooth', block: 'start' });\n}\n\nconst SearchPage: React.FC<ISearchPageProps> = (props) => {\n\n  const onClickTeach = async (e: React.MouseEvent<HTMLElement>) => {\n    await props.setShowForm();\n    checkScrollForm();\n  }\n\n  const handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const search = e.target.value;\n    props.setSearch(search);\n  };\n  \n  // TODO: Actually filter results\n  const filterResults = () => {\n    return ['Annie Barnett-Young', 'Kathryn Hackman', 'Kristen Moran'];\n  }\n\n  const onKeyPress = async (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      if (props.searchText !== '') {\n        props.setUserList(filterResults());\n      }\n    }\n  }\n\n\n  return (<React.Fragment><SearchBar\n    text={props.searchText}\n    placeholder={'teach me how to...'}\n    handleSearch={handleSearch}\n    onKeyPress={onKeyPress} />\n  <StyledButton onClick={onClickTeach} >I want to teach</StyledButton>\n  </React.Fragment>);\n}\n\nexport default SearchPage;","import React, { useState } from 'react';\nimport '../App.css';\nimport Results from './Results';\nimport Form from './Form/Form';\nimport logo from '../Cogo-Connect-Icon.png';\nimport { Logo, Reset } from './styles';\nimport SearchPage from './SearchPage';\n\n\nconst Home: React.FC = () => {\n\n  const [searchText, setSearchText] = useState('');\n  const [userList, setUserList] = useState(['']);\n  const [showForm, setShowForm] = useState(false);\n\n  const handleSearch = (search: string) => {\n    setSearchText(search);\n  };\n\n  const onSearchSubmission = async (users: string[]) => {\n    await setUserList(['John Doe', 'Jane Doe', 'John Smith']);\n    checkScroll();\n  }\n\n  const scrollTop = () => {\n    document.getElementById('top') &&\n      document.getElementById('top')!.scrollIntoView({ behavior: 'smooth', block: 'start' });\n    setSearchText('');\n    setUserList(['']);\n    setShowForm(false);\n  }\n\n  const checkScroll = () => {\n    document.getElementById('Results') &&\n      document.getElementById('Results')!.scrollIntoView({ behavior: 'smooth', block: 'start' });\n  }\n\n  const searchShowForm = () => {\n    setShowForm(true);\n  }\n\n  return (<div className=\"App\">\n\n    <header className=\"App-header\" id=\"top\">\n      <SearchPage setShowForm={searchShowForm} setSearch={handleSearch} searchText={searchText} setUserList={onSearchSubmission}/>\n      <Logo href='https://www.kristenemoran.com' target='_blank'><img src={logo} alt=\"logo\" height=\"80px\" /> </Logo>\n      <Reset onClick={scrollTop} />\n    </header>\n\n    <div className=\"Results\" id=\"Results\">\n      <Results list={userList} term={searchText} />\n    </div>\n\n    <div className=\"Form\" id=\"Form\">\n      {showForm && <Form />}\n    </div>\n  </div >\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport SearchBar from './components/SearchBar/SearchBar';\nimport { StyledButton } from './components/Button/Button';\nimport Form from './views/Form/Form';\nimport SearchResult from './components/SearchResult/SearchResult';\nimport SearchResultList from './components/SearchResultList/SearchResultList';\nimport Home from './views/Home';\n\n\nfunction App() {\n    return ( < Home text = '' / > );\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}